{"name":"Stringcompare","tagline":"Simple string comparing utility with awesome features.","body":"StringCompare\r\n=============\r\n<code>StringCompare($compareThisString, $toThisString, $percentage) //in PHP</code><br/>\r\n<code>SC(compareThisString, toThisString, percentage) //in JS</code><br/><br/>\r\nStringCompare is a addon function to compare two string based on percentage matched. It has two operating mode<br/>\r\n<b>1.Word count mode</b><br/>\r\n<p>This mode will be active by default.It will be useful to compare two sentences. <br/>\r\nFor example:<br/>\r\n<code>\r\nStringCompare('Hello World','Hello my world',90) // returns true \r\n</code><Br/>\r\n<code>\r\nStringCompare('Hello Sagar', 'Hello Ryan',90) // returns false <br/>\r\n</code>\r\n</p>\r\n<b>2.Char count mode</b><br/>\r\n<p>\r\nTo enable this mode configuration of the StringCompare needs to be changed. This will be useful to compare two words. <br/> \r\nFor example: <br/>\r\n<code>\r\nStringCompare('letters','letter',50) // returns true <br/>\r\n</code>\r\n</p>\r\n\r\nConfiguration\r\n=============\r\n\r\nTo change the mode, following has to be done before applying the funtion.<br/>\r\nThese are the options available. <br/>\r\n1. wordcount<br/>\r\n2. charcount<br/>\r\n\r\n<b>In PHP</b><br/>\r\n<code>\r\n$option = 'charcount';\r\n</code><br/>\r\n<code>\r\n$config['COMPARE_TYPE'] = $option //Comparision will be done in charcount mode <br/>\r\n</code>\r\n\r\n<b>In JS</b><br/>\r\n<code>\r\nSC.setoptions({COMPARE_TYPE:'charcount'});\r\n</code>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}